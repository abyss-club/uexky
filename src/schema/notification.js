export default `
  extend type Query {
    # The count of unread notifications.
    unreadNotiCount: UnreadNotiCount!
    # Notifications for current user.
    notification(
      # One of 'system', 'replied' or 'quoted'.
      type: String!,
      query: SliceQuery!,
    ): NotiSlice!
  }

  # Count of different types of unread notifications.
  type UnreadNotiCount {
    # Announcement messages from server.
    system: Int!
    # Threads that are replied.
    replied: Int!
    # Posts that are quoted.
    quoted: Int!
  }

  # NotiSlice object is for selecting specific 'slice' of an object to return.
  # Affects the returning SliceInfo.
  type NotiSlice {
    # Announcement messages from server.
    system: [SystemNoti!]
    # Threads that are replied.
    replied: [RepliedNoti!]
    # Posts that are quoted.
    quoted: [QuotedNoti!]
    # SliceInfo objects are generated by the server. Can be used in
    # consecutive queries.
    sliceInfo: SliceInfo!
  }

  # Object describing a system notification.
  type SystemNoti {
    # ID contains different types of format.
    id: String!
    # Type of Notification. "system", "replied" or "quoted".
    type: String!
    # Time when a notify event triggers. E.g. The time when a system event is
    # announced from the server.
    eventTime: Time!
    # The nofitication is read or not.
    hasRead: Boolean!
    # Notification title.
    title: String!
    # Markdown formatted notification content.
    content: String!
  }

  # Object describing a replied notification.
  type RepliedNoti {
    # ID contains different types of format.
    id: String!
    # Type of Notification. "system", "replied" or "quoted".
    type: String!
    # Time when a notify event triggers. E.g. The time when a thread is replied.
    eventTime: Time!
    # The nofitication is read or not.
    hasRead: Boolean!
    # The thread object that is replied.
    thread: Thread!
    # Array of users that replied. Same as the corresponding author field in
    # the object "Post".
    repliers: [String!]!
  }

  # Object describing a quoted notification.
  type QuotedNoti {
    # ID contains different types of format.
    id: String!
    # Type of Notification. "system", "replied" or "quoted".
    type: String!
    # Time when a notify event triggers. E.g. The time when a post is quoted.
    eventTime: Time!
    hasRead: Boolean!
    # The thread object that is quoted in.
    thread: Thread!
    # The post object that is quoted.
    quotedPost: Post!
    # The post object that made this notification.
    post: Post!
  }
`;
