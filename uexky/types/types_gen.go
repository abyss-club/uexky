// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package types

import (
	"time"
)

type NotiSlice struct {
	System    []*SystemNoti  `json:"system"`
	Replied   []*RepliedNoti `json:"replied"`
	Quoted    []*QuotedNoti  `json:"quoted"`
	SliceInfo *SliceInfo     `json:"sliceInfo"`
}

type Post struct {
	ID          string    `json:"id"`
	CreatedAt   time.Time `json:"createdAt"`
	Anonymous   bool      `json:"anonymous"`
	Author      string    `json:"author"`
	Content     string    `json:"content"`
	Quotes      []*Post   `json:"quotes"`
	QuotedCount int       `json:"quotedCount"`
	Blocked     bool      `json:"blocked"`
}

type PostInput struct {
	ThreadID  string   `json:"threadId"`
	Anonymous bool     `json:"anonymous"`
	Content   string   `json:"content"`
	QuoteIds  []string `json:"quoteIds"`
}

type PostSlice struct {
	Posts     []*Post    `json:"posts"`
	SliceInfo *SliceInfo `json:"sliceInfo"`
}

type QuotedNoti struct {
	ID         string    `json:"id"`
	Type       string    `json:"type"`
	EventTime  time.Time `json:"eventTime"`
	HasRead    bool      `json:"hasRead"`
	Thread     *Thread   `json:"thread"`
	QuotedPost *Post     `json:"quotedPost"`
	Post       *Post     `json:"post"`
}

type RepliedNoti struct {
	ID        string    `json:"id"`
	Type      string    `json:"type"`
	EventTime time.Time `json:"eventTime"`
	HasRead   bool      `json:"hasRead"`
	Thread    *Thread   `json:"thread"`
	Repliers  []string  `json:"repliers"`
}

type SliceInfo struct {
	FirstCursor string `json:"firstCursor"`
	LastCursor  string `json:"lastCursor"`
	HasNext     bool   `json:"hasNext"`
}

type SliceQuery struct {
	Before *string `json:"before"`
	After  *string `json:"after"`
	Limit  int     `json:"limit"`
}

type SystemNoti struct {
	ID        string    `json:"id"`
	Type      string    `json:"type"`
	EventTime time.Time `json:"eventTime"`
	HasRead   bool      `json:"hasRead"`
	Title     string    `json:"title"`
	Content   string    `json:"content"`
}

type Tag struct {
	Name      string   `json:"name"`
	IsMain    bool     `json:"isMain"`
	BelongsTo []string `json:"belongsTo"`
}

type Thread struct {
	ID         string               `json:"id"`
	CreatedAt  time.Time            `json:"createdAt"`
	Anonymous  bool                 `json:"anonymous"`
	Author     string               `json:"author"`
	Title      *string              `json:"title"`
	Content    string               `json:"content"`
	MainTag    string               `json:"mainTag"`
	SubTags    []string             `json:"subTags"`
	Replies    *PostSlice           `json:"replies"`
	ReplyCount int                  `json:"replyCount"`
	Catalog    []*ThreadCatalogItem `json:"catalog"`
	Blocked    bool                 `json:"blocked"`
	Locked     bool                 `json:"locked"`
}

type ThreadCatalogItem struct {
	PostID    string    `json:"postId"`
	CreatedAt time.Time `json:"createdAt"`
}

type ThreadInput struct {
	Anonymous bool     `json:"anonymous"`
	Content   string   `json:"content"`
	MainTag   string   `json:"mainTag"`
	SubTags   []string `json:"subTags"`
	Title     *string  `json:"title"`
}

type ThreadSlice struct {
	Threads   []*Thread  `json:"threads"`
	SliceInfo *SliceInfo `json:"sliceInfo"`
}

type UnreadNotiCount struct {
	System  int `json:"system"`
	Replied int `json:"replied"`
	Quoted  int `json:"quoted"`
}

type User struct {
	Email   string       `json:"email"`
	Name    *string      `json:"name"`
	Tags    []string     `json:"tags"`
	Role    *string      `json:"role"`
	Threads *ThreadSlice `json:"threads"`
	Posts   *PostSlice   `json:"posts"`
}
