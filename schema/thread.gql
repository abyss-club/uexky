extend type Query {
  """ A slice of Thread."""
  threadSlice(tags: [String!], query: SliceQuery!): ThreadSlice!
  """ A Thread object."""
  thread(id: UID!): Thread!
}

extend type Mutation {
  """ Publish a new Thread."""
  pubThread(thread: ThreadInput!): Thread!
}

""" Construct a new Thread."""
input ThreadInput {
  """ Toggle anonymousness. If true, a new ID will be generated in each thread."""
  anonymous: Boolean!
  """ Markdown formmatted text. """
  content: String!
  """ Required. Only one mainTag is allowed."""
  mainTag: String!
  """ Optional, maximum of 4."""
  subTags: [String!]
  """ Optional. If not set, the title will be '无题'."""
  title: String
}

type Thread {
  """ UUID with 8 chars in length, and will increase to 9 after 30 years."""
  id: UID!
  createdAt: Time!
  author: Author!
  title: String
  """ Markdown formatted content."""
  content: String!
  """ Only one mainTag is allowed."""
  mainTag: String!
  """ Optional, maximum of 4."""
  subTags: [String!]!
  """ Replied posts."""
  replies(query: SliceQuery!): PostSlice!
  """ Amount of posts replied."""
  replyCount: Int!
  """ A list of all posts replied in the thread. Sorted by timestamp."""
  catalog: [ThreadCatalogItem!]
  """ Thread is blocked."""
  blocked: Boolean!
  """ Thread is locked."""
  locked: Boolean!
}

""" The ID and timestamp of post replied in the thread."""
type ThreadCatalogItem {
  """ The ID of post."""
  postId: String!
  createdAt: Time!
}

type ThreadSlice {
  threads: [Thread!]!
  sliceInfo: SliceInfo!
}
