// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"gitlab.com/abyss.club/uexky/graph"
	"gitlab.com/abyss.club/uexky/lib/mail"
	"gitlab.com/abyss.club/uexky/lib/postgres"
	"gitlab.com/abyss.club/uexky/lib/redis"
	"gitlab.com/abyss.club/uexky/repo"
	"gitlab.com/abyss.club/uexky/uexky"
	"gitlab.com/abyss.club/uexky/uexky/entity"
)

// Injectors from wire.go:

func InitProdServer() (*Server, error) {
	client, err := redis.NewClient()
	if err != nil {
		return nil, err
	}
	db, err := postgres.NewDB()
	if err != nil {
		return nil, err
	}
	txAdapter := &postgres.TxAdapter{
		DB: db,
	}
	mainTag, err := repo.NewMainTag(txAdapter)
	if err != nil {
		return nil, err
	}
	userRepo := &repo.UserRepo{
		Redis:    client,
		MainTags: mainTag,
	}
	adapter := mail.NewAdapter()
	userService := &entity.UserService{
		Repo: userRepo,
		Mail: adapter,
	}
	forumRepo := &repo.ForumRepo{
		Redis:    client,
		MainTags: mainTag,
	}
	forumService := &entity.ForumService{
		Repo: forumRepo,
	}
	notiRepo := &repo.NotiRepo{}
	notiService := &entity.NotiService{
		Repo: notiRepo,
	}
	service := &uexky.Service{
		User:      userService,
		Forum:     forumService,
		Noti:      notiService,
		TxAdapter: txAdapter,
	}
	resolver := &graph.Resolver{
		Uexky: service,
	}
	server := &Server{
		Resolver:  resolver,
		Service:   service,
		TxAdapter: txAdapter,
	}
	return server, nil
}
